name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run lint checks with SARIF output
      run: ./gradlew lintDebug --continue
      
    - name: Upload SARIF to GitHub code scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: |
          mobile/build/reports/lint-results-debug.sarif
          wear/build/reports/lint-results-debug.sarif
        category: android-lint
        
    - name: Upload lint reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-reports
        path: |
          */build/reports/lint-results-*.html
          */build/reports/lint-results-*.xml
          */build/reports/lint-results-*.sarif

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run unit tests
      run: ./gradlew test --continue
      
    - name: Generate coverage reports
      run: ./gradlew jacocoTestReport --continue
      
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          */build/test-results/**/*.xml
        check_name: "Unit Test Results"
        comment_mode: create new
        compare_to_earlier_commit: false
        
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: |
          */build/reports/tests/*/
          */build/test-results/*/
          

  build:
    name: Build APKs
    runs-on: ubuntu-latest
    timeout-minutes: 25
    needs: [lint, test]
    
    strategy:
      matrix:
        variant: [Debug, Release]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Build ${{ matrix.variant }} APK
      run: ./gradlew assemble${{ matrix.variant }} --no-daemon
      
    - name: Upload ${{ matrix.variant }} APKs
      uses: actions/upload-artifact@v4
      with:
        name: apk-${{ matrix.variant }}
        path: |
          mobile/build/outputs/apk/${{ matrix.variant == 'Debug' && 'debug' || 'release' }}/*.apk
          wear/build/outputs/apk/${{ matrix.variant == 'Debug' && 'debug' || 'release' }}/*.apk
        retention-days: 30


  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' }}
        
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Check for dependency updates
      run: ./gradlew dependencyUpdates --continue
      
    - name: Upload dependency reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-reports
        path: build/dependencyUpdates/